@model IEnumerable<SmartCafe.Models.Drink>
@using Microsoft.AspNetCore.Identity
@using SmartCafe.Models

@{
    ViewData["Title"] = "Menu Page";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Lagoon's Cocktail Bar</title>
    <style>
        body {
            font-family: Montserrat sans-serif;
            margin: 50;
            padding: 0;
            background-image: url('/images/abstractBackground1.png');
            color: white;
        }

        .header {
            background-color: transparent;
            color: #fff;
            padding: 0px 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .nav {
            list-style-type: none;
            display: flex;
            align-items: center;
        }

            .nav li {
                margin-right: 35px;
                margin-top: -50px;
                text-transform: uppercase;
                font-size: 14px;
            }

            .nav a {
                color: #fff;
                text-decoration: none;
                padding-bottom: 3px;
                border-bottom: 2px solid transparent;
                transition: border-bottom-color 0.3s;
            }

                .nav a:hover {
                    border-bottom-color: #fff;
                }

        .logo img {
            max-width: 35%;
            margin-right: 0px;
            margin-left: 15px;
            margin-top: -20px;
        }

        .buttons-container {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        .carousel {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            margin-top: 50px;
        }

        .carousel-item {
            position: relative;
            text-align: center;
        }

            .carousel-item img {
                position: relative;
                width: 200px;
                height: 200px;
                object-fit: cover;
            }

        .carousel-item {
            position: relative;
            text-align: center;
        }

            .carousel-item .image-container {
                position: relative;
                display: inline-block;
            }

        .info-icon {
            position: absolute;
            top: 10px;
            left: 10px;
            font-size: 24px;
            color: white;
            cursor: pointer;
            z-index: 1;
            opacity: 1;
            transition: opacity 0.3s;
        }

        .info-message {
            position: absolute;
            top: -100%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 10px;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            font-size: 14px;
            font-weight: bold;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s;
        }

        .carousel-image:hover .info-icon + .info-message {
            top: 50%;
            opacity: 1;
        }


        .quantity {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 10px;
        }

            .quantity button {
                width: 30px;
                height: 30px;
                background-color: #fff;
                border: none;
                color: #000;
                font-size: 16px;
                cursor: pointer;
                outline: none;
            }

            .quantity input {
                width: 40px;
                height: 30px;
                text-align: center;
                font-size: 16px;
                border: none;
                outline: none;
            }

        .finish-order {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

            .finish-order button {
                padding: 10px 20px;
                background-color: #ff3366;
                color: #fff;
                border: none;
                border-radius: 5px;
                font-size: 16px;
                cursor: pointer;
                transition: background-color 0.3s;
                margin-bottom: 20px;
            }

                .finish-order button:hover {
                    background-color: #e6004c;
                }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>
    <div class="header">
        <div class="logo">
            <img src="~/images/lagoonLogoWhiteTransparent.png" alt="Logo">
        </div>

        <ul class="nav">
            <li><a class="active" asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
            <li><a asp-area="" asp-controller="Home" asp-action="Index">About Us</a></li>
            <li><a asp-area="" asp-controller="Home" asp-action="Contact">Contact</a></li>
            <li><a asp-area="Identity" asp-page="/Account/Login">Staff Login</a></li>
        </ul>
    </div>

    <h1 style="text-align:center">The Menu</h1>

    <!-- kod za menu -->
    <div class="carousel">
        @if (ViewBag.Drinks != null)
        {
            var drinks = ViewBag.Drinks as IEnumerable<SmartCafe.Models.Drink>;
            foreach (var drink in drinks)
            {
                <div class="carousel-item">
                    <div class="image-container">
                        <i class="fas fa-info-circle info-icon"></i>
                        <img src="@Url.Content("~/images/" + drink.name + ".jpg")" alt="@drink.name" class="carousel-image" />
                    </div>
                    <div class="info-message">Default message about ingredients</div>
                    <h3>@drink.name</h3>
                    <p>Price: @drink.price</p>
                    <div class="quantity">
                        <button class="minus-btn" data-drink-id="@drink.id">-</button>
                        <input type="text" class="quantity-input" value="0" />
                        <button class="plus-btn" data-drink-id="@drink.id">+</button>
                    </div>
                </div>

            }
        }
    </div>
    @{
        var tableNumber = ViewBag.TableNumber;
        var selectedDrinks = ViewBag.SelectedDrinks as List<Tuple<string, int, double>>;
    }

    <!-- Finish Order button -->
    <div class="finish-order">
        <button id="finish-order-btn" type="button" onclick="submitOrder()">Finish Order</button>
        <!-- Table Number label -->
        <p>Selected Table Number: @ViewBag.SelectedTableNumber</p>

    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const quantityElements = document.querySelectorAll('.quantity');

            quantityElements.forEach(function (element) {
                const minusBtn = element.querySelector('.minus-btn');
                const plusBtn = element.querySelector('.plus-btn');
                const quantityInput = element.querySelector('input.quantity-input');

                minusBtn.addEventListener('click', function () {
                    updateQuantity(-1);
                });

                plusBtn.addEventListener('click', function () {
                    updateQuantity(1);
                });

                function updateQuantity(change) {
                    let quantity = parseInt(quantityInput.value);
                    quantity += change;

                    if (quantity < 0) {
                        quantity = 0;
                    }

                    quantityInput.value = quantity;
                }
            });

            const finishOrderButton = document.getElementById('finish-order-btn');
            finishOrderButton.addEventListener('click', function () {
                const selectedDrinks = [];
                const quantityInputs = document.querySelectorAll('.quantity-input');

                quantityInputs.forEach(function (input) {
                    const quantity = parseInt(input.value);
                    const drinkId = input.parentElement.querySelector('.minus-btn').getAttribute('data-drink-id');
                    if (quantity > 0) {
                        selectedDrinks.push({ drinkId: drinkId, quantity: quantity });
                    }
                });

                // Create a form and append selectedDrinks as hidden inputs
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/ModifyOrder';

                // Create a hidden input field for the selected table number
                const tableNumberInput = document.createElement('input');
                tableNumberInput.type = 'hidden';
                tableNumberInput.name = 'tableNumber';
                tableNumberInput.value = '@ViewBag.SelectedTableNumber';
                form.appendChild(tableNumberInput);

                selectedDrinks.forEach(function (drink) {
                    const drinkIdInput = document.createElement('input');
                    drinkIdInput.type = 'hidden';
                    drinkIdInput.name = 'selectedDrinks[' + drink.drinkId + ']';
                    drinkIdInput.value = drink.quantity;
                    form.appendChild(drinkIdInput);
                });

                // Append the form to the document and submit it
                document.body.appendChild(form);
                form.submit();
            });

            function getDrinkNameById(drinkId) {
                const drinks = @Html.Raw(Json.Serialize(Model));
                const drink = drinks.find(d => d.id === drinkId);
                return drink ? drink.name : 'Nepoznato';
            }
        });
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>
</body>
</html>
